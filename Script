--[[ 
  IMPORTANT:
  Ensure your game's ReplicatedStorage has three folders:
    • "Pets"  - contains pet models.
    • "Seeds" - contains seed models.
    • "Eggs"  - contains egg models.
  Each model should either have a PrimaryPart (if it's a Model) or be a BasePart.
--]]

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")  -- for positioning spawned items

-- Prepare the GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpawnerGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.Size = UDim2.new(0, 300, 0, 150)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Parent = screenGui

-- Optional: A title label for instructions.
local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Spawn Items"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 26
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.AnchorPoint = Vector2.new(0.5, 0)
titleLabel.Position = UDim2.new(0.5, 0, 0, 5)
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Parent = frame

-- A helper function to create buttons.
local function createButton(name, buttonText, posY)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = buttonText
    button.Font = Enum.Font.Gotham
    button.TextSize = 22
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.Size = UDim2.new(1, -20, 0, 30)
    button.Position = UDim2.new(0, 10, 0, posY)
    button.Parent = frame
    return button
end

-- Create three buttons for spawning each type
local petButton = createButton("PetButton", "Spawn Pet", 50)
local seedButton = createButton("SeedButton", "Spawn Seed", 90)
local eggButton = createButton("EggButton", "Spawn Egg", 130)

-- This function picks a random item from a folder in ReplicatedStorage and spawns it near the player.
local function spawnRandomItem(folderName)
    local folder = ReplicatedStorage:FindFirstChild(folderName)
    if folder then
        local items = folder:GetChildren()
        if #items > 0 then
            local randomItem = items[math.random(1, #items)]
            local clone = randomItem:Clone()
            clone.Parent = workspace
            
            -- Positioning: for models with a PrimaryPart, set the CFrame; for BaseParts, set Position.
            local spawnPosition = hrp.Position + Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
            if clone:IsA("Model") then
                if clone.PrimaryPart then
                    clone:SetPrimaryPartCFrame(CFrame.new(spawnPosition))
                else
                    -- If there's no PrimaryPart, attempt to move one of its parts.
                    local primary = clone:FindFirstChildWhichIsA("BasePart")
                    if primary then
                        clone:MoveTo(spawnPosition)
                    else
                        warn("Model " .. randomItem.Name .. " has no BasePart to position.")
                    end
                end
            elseif clone:IsA("BasePart") then
                clone.Position = spawnPosition + Vector3.new(0, 5, 0)
            else
                warn("Cloned item is not a Model or BasePart!")
            end
        else
            warn("The folder '" .. folderName .. "' is empty.")
        end
    else
        warn("Folder '" .. folderName .. "' not found in ReplicatedStorage.")
    end
end

-- Connect button clicks to spawn functions
petButton.MouseButton1Click:Connect(function()
    spawnRandomItem("Pets")
end)

seedButton.MouseButton1Click:Connect(function()
    spawnRandomItem("Seeds")
end)

eggButton.MouseButton1Click:Connect(function()
    spawnRandomItem("Eggs")
end)
